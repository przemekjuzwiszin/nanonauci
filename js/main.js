!function(n){var r={};function c(a){if(r[a])return r[a].exports;var t=r[a]={i:a,l:!1,exports:{}};return n[a].call(t.exports,t,t.exports,c),t.l=!0,t.exports}c.m=n,c.c=r,c.d=function(n,r,a){c.o(n,r)||Object.defineProperty(n,r,{enumerable:!0,get:a})},c.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},c.t=function(n,r){if(1&r&&(n=c(n)),8&r)return n;if(4&r&&"object"==typeof n&&n&&n.__esModule)return n;var a=Object.create(null);if(c.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:n}),2&r&&"string"!=typeof n)for(var t in n)c.d(a,t,function(r){return n[r]}.bind(null,t));return a},c.n=function(n){var r=n&&n.__esModule?function(){return n.default}:function(){return n};return c.d(r,"a",r),r},c.o=function(n,r){return Object.prototype.hasOwnProperty.call(n,r)},c.p="",c(c.s=0)}([function(module,exports,__webpack_require__){"use strict";eval('\r\n\r\n// service worker registration - remove if you\'re not going to use it\r\n\r\nif ("serviceWorker" in navigator) {\r\n  window.addEventListener("load", function () {\r\n    navigator.serviceWorker.register("serviceworker.js").then(\r\n      function (registration) {\r\n        // Registration was successful\r\n        console.log(\r\n          "ServiceWorker registration successful with scope: ",\r\n          registration.scope\r\n        );\r\n      },\r\n      function (err) {\r\n        // registration failed :(\r\n        console.log("ServiceWorker registration failed: ", err);\r\n      }\r\n    );\r\n  });\r\n}\r\n\r\n// place your code below\r\n\r\n//CONSTANT\r\nvar CANVAS_WIDTH = 800;\r\nvar CANVAS_HEIGHT = 600;\r\nvar NANONAUT_WIDTH = 181;\r\nvar NANONAUT_HEIGHT = 229;\r\nvar GROUND_Y = 540;\r\nvar NANONAUT_Y_ACCELERATION = 1;\r\nvar SPACE_KEYCODE = 32;\r\nvar NANONAUT_JUMP_SPEED = 20;\r\nvar NANONAUT_X_SPEED = 5;\r\nvar BACKGROUND_WIDTH = 1000;\r\nvar NANONAUT_NR_ANIMATION_FRAMES = 7;\r\nvar NANONAUT_ANIMATION_SPEED = 3;\r\nvar ROBOT_WIDTH = 141;\r\nvar ROBOT_HEIGHT = 139;\r\nvar ROBOT_NR_ANIMATION_FRAMES = 9;\r\nvar ROBOT_ANIMATION_SPEED = 5;\r\nvar ROBOT_X_SPEED = 4;\r\nvar MIN_DISTANCE_BETWEEN_ROBOTS = 400;\r\nvar MAX_DISTANCE_BETWEEN_ROBOTS = 1200;\r\nvar MAX_ACTIVE_ROBOTS = 3;\r\nvar SCREENSHAKE_RADIUS = 16;\r\nvar NANONAUT_MAX_HEALTH = 100;\r\nvar PLAY_GAME_MODE = 0;\r\nvar GAME_OVER_GAME_MODE = 1;\r\n\r\n//PRECONFIGURATION\r\nvar canvas = document.createElement("canvas");\r\nvar c = canvas.getContext("2d");\r\ncanvas.width = CANVAS_WIDTH;\r\ncanvas.height = CANVAS_HEIGHT;\r\ndocument.body.appendChild(canvas);\r\n\r\nvar nanonautImage = new Image();\r\nnanonautImage.src = "assets/img/animatedNanonaut.png";\r\n\r\nvar backgroundImage = new Image();\r\nbackgroundImage.src = "assets/img/background.png";\r\n\r\nvar bush1Image = new Image();\r\nbush1Image.src = "assets/img/bush1.png";\r\n\r\nvar bush2Image = new Image();\r\nbush2Image.src = "assets/img/bush2.png";\r\n\r\nvar robotImage = new Image();\r\nrobotImage.src = "assets/img/animatedRobot.png";\r\n\r\nvar gameMode = PLAY_GAME_MODE;\r\nvar nanonautX = CANVAS_WIDTH / 2;\r\nvar nanonautY = GROUND_Y - NANONAUT_HEIGHT;\r\nvar nanonautYspeed = 0;\r\nvar nanonautIsInTheAir = false;\r\nvar spaceKeyIsPressed = false;\r\nvar nanonautHealth = NANONAUT_MAX_HEALTH;\r\nvar cameraX = 0;\r\nvar cameraY = 0;\r\nvar screenshake = false;\r\nvar nanonautFrameNr = 0;\r\nvar gameFrameCounter = 0;\r\nvar bushData = generateBushes();\r\nvar nanonautSpriteSheet = {\r\n  nrFramesPerRow: 5,\r\n  spriteWidth: NANONAUT_WIDTH,\r\n  spriteHeight: NANONAUT_HEIGHT,\r\n  image: nanonautImage,\r\n};\r\n\r\n//Code to handle the robot sprite sheet (new object)\r\nvar robotSpriteSheet = {\r\n  nrFramesPerRow: 3,\r\n  spriteWidth: ROBOT_WIDTH,\r\n  spriteHeight: ROBOT_HEIGHT,\r\n  image: robotImage,\r\n};\r\n\r\nvar nanonautCollisionRectangle = {\r\n  xOffset: 60,\r\n  yOffset: 20,\r\n  width: 50,\r\n  height: 200,\r\n};\r\n\r\nvar robotCollisionRectangle = {\r\n  xOffset: 50,\r\n  yOffset: 20,\r\n  width: 50,\r\n  height: 100,\r\n};\r\n\r\n//Short list of robots to test\r\nvar robotData = [];\r\n\r\nwindow.addEventListener("keydown", onKeyDown);\r\nwindow.addEventListener("keyup", onKeyUp);\r\n\r\nwindow.addEventListener("load", start);\r\n\r\nfunction start() {\r\n  window.requestAnimationFrame(mainLoop);\r\n}\r\n\r\nfunction generateBushes() {\r\n  var generatedBushData = [];\r\n  var bushX = 0;\r\n  while (bushX < 2 * CANVAS_WIDTH) {\r\n    var bushImage;\r\n    if (Math.random() >= 0.5) {\r\n      bushImage = bush1Image;\r\n    } else {\r\n      bushImage = bush2Image;\r\n    }\r\n    generatedBushData.push({\r\n      x: bushX,\r\n      y: 80 + Math.random() * 20,\r\n      image: bushImage,\r\n    });\r\n    bushX += 150 + Math.random() * 200;\r\n  }\r\n  return generatedBushData;\r\n}\r\n\r\n//MAIN LOOP\r\nfunction mainLoop() {\r\n  update();\r\n  draw();\r\n  window.requestAnimationFrame(mainLoop);\r\n}\r\n\r\n//CONTROL\r\nfunction onKeyDown(event) {\r\n  if (event.keyCode === SPACE_KEYCODE) {\r\n    spaceKeyIsPressed = true;\r\n  }\r\n}\r\n\r\nfunction onKeyUp(event) {\r\n  if (event.keyCode === SPACE_KEYCODE) {\r\n    spaceKeyIsPressed = false;\r\n  }\r\n}\r\n\r\n//UPDATE\r\nfunction update() {\r\n  if (gameMode != PLAY_GAME_MODE) return;\r\n\r\n  gameFrameCounter = gameFrameCounter + 1;\r\n\r\n  nanonautX = nanonautX + NANONAUT_X_SPEED;\r\n  if (spaceKeyIsPressed && !nanonautIsInTheAir) {\r\n    nanonautYspeed = -NANONAUT_JUMP_SPEED;\r\n    nanonautIsInTheAir = true;\r\n  }\r\n\r\n  //Update nanonaut\r\n  nanonautY = nanonautY + nanonautYspeed;\r\n  nanonautYspeed = nanonautYspeed + NANONAUT_Y_ACCELERATION;\r\n  if (nanonautY > GROUND_Y - NANONAUT_HEIGHT) {\r\n    nanonautY = GROUND_Y - NANONAUT_HEIGHT;\r\n    nanonautYspeed = 0;\r\n    nanonautIsInTheAir = false;\r\n  }\r\n\r\n  //Update animation\r\n  if (gameFrameCounter % NANONAUT_ANIMATION_SPEED === 0) {\r\n    nanonautFrameNr = nanonautFrameNr + 1;\r\n    if (nanonautFrameNr >= NANONAUT_NR_ANIMATION_FRAMES) {\r\n      nanonautFrameNr = 0;\r\n    }\r\n  }\r\n\r\n  //Update camera\r\n  cameraX = nanonautX - 150;\r\n\r\n  //Update bushes\r\n  for (var i = 0; i < bushData.length; i++) {\r\n    if (bushData[i].x - cameraX < -CANVAS_WIDTH) {\r\n      bushData[i].x += 2 * CANVAS_WIDTH + 150;\r\n    }\r\n  }\r\n\r\n  //Update robots\r\n  screenshake = false;\r\n  var nanonautTouchedARobot = updateRobots();\r\n  if (nanonautTouchedARobot) {\r\n    screenshake = true;\r\n    if (nanonautHealth > 0) nanonautHealth -= 1;\r\n  }\r\n  //check if the game end\r\n  if (nanonautHealth <= 0) {\r\n    gameMode = GAME_OVER_GAME_MODE;\r\n    screenshake = false;\r\n  }\r\n}\r\n\r\nfunction updateRobots() {\r\n  //Moving and animating robots and detects a collision with a nanonaut\r\n  var nanonautTouchedARobot = false;\r\n  for (var i = 0; i < robotData.length; i++) {\r\n    if (\r\n      doesNanonautOverlapRobot(\r\n        nanonautX + nanonautCollisionRectangle.xOffset,\r\n        nanonautY + nanonautCollisionRectangle.yOffset,\r\n        nanonautCollisionRectangle.width,\r\n        nanonautCollisionRectangle.height,\r\n        robotData[i].x + robotCollisionRectangle.xOffset,\r\n        robotData[i].y + robotCollisionRectangle.yOffset,\r\n        robotCollisionRectangle.width,\r\n        robotCollisionRectangle.height\r\n      )\r\n    ) {\r\n      nanonautTouchedARobot = true;\r\n    }\r\n    robotData[i].x -= ROBOT_X_SPEED;\r\n    if (gameFrameCounter % ROBOT_ANIMATION_SPEED === 0) {\r\n      robotData[i].frameNr = robotData[i].frameNr + 1;\r\n      if (robotData[i].frameNr >= ROBOT_NR_ANIMATION_FRAMES) {\r\n        robotData[i].frameNr = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  //Remove robots that have gone off-screen\r\n  var robotIndex = 0;\r\n  while (robotIndex < robotData.length) {\r\n    if (robotData[robotIndex].x < cameraX - ROBOT_WIDTH) {\r\n      robotData.splice(robotIndex, 1);\r\n    } else {\r\n      robotIndex += 1;\r\n    }\r\n  }\r\n\r\n  if (robotData.length < MAX_ACTIVE_ROBOTS) {\r\n    var lastRobotX = CANVAS_WIDTH;\r\n    if (robotData.length > 0) {\r\n      lastRobotX = robotData[robotData.length - 1].x;\r\n    }\r\n    var newRobotX =\r\n      lastRobotX +\r\n      MIN_DISTANCE_BETWEEN_ROBOTS +\r\n      Math.random() *\r\n        (MAX_DISTANCE_BETWEEN_ROBOTS - MIN_DISTANCE_BETWEEN_ROBOTS);\r\n    robotData.push({\r\n      x: newRobotX,\r\n      y: GROUND_Y - ROBOT_HEIGHT,\r\n      frameNr: 0,\r\n    });\r\n  }\r\n  return nanonautTouchedARobot;\r\n}\r\n\r\nfunction doesNanonautOverlapRobotAlongOneAxis(\r\n  nanonautNearX,\r\n  nanonautFarX,\r\n  robotNearX,\r\n  robotFarX\r\n) {\r\n  var nanonautOverlapsNearRobotEdge =\r\n    nanonautFarX >= robotNearX && nanonautFarX <= robotFarX;\r\n  var nanonautOverlapsFarRobotEdge =\r\n    nanonautNearX >= robotNearX && nanonautNearX <= robotFarX;\r\n  var nanonautOverlapsEntireRobot =\r\n    nanonautNearX <= robotNearX && nanonautFarX >= robotFarX;\r\n  return (\r\n    nanonautOverlapsNearRobotEdge ||\r\n    nanonautOverlapsFarRobotEdge ||\r\n    nanonautOverlapsEntireRobot\r\n  );\r\n}\r\n\r\nfunction doesNanonautOverlapRobot(\r\n  nanonautX,\r\n  nanonautY,\r\n  NANONAUT_WIDTH,\r\n  NANONAUT_HEIGHT,\r\n  robotX,\r\n  robotY,\r\n  ROBOT_WIDTH,\r\n  ROBOT_HEIGHT\r\n) {\r\n  var nanonautOverlapsRobotOnXAxis = doesNanonautOverlapRobotAlongOneAxis(\r\n    nanonautX,\r\n    nanonautX + NANONAUT_WIDTH,\r\n    robotX,\r\n    robotX + ROBOT_WIDTH\r\n  );\r\n  var nanonautOverlapRobotOnYAxis = doesNanonautOverlapRobotAlongOneAxis(\r\n    nanonautY,\r\n    nanonautY + NANONAUT_HEIGHT,\r\n    robotY,\r\n    robotY + ROBOT_HEIGHT\r\n  );\r\n  return nanonautOverlapsRobotOnXAxis && nanonautOverlapRobotOnYAxis;\r\n}\r\n\r\n//DRAWING\r\nfunction draw() {\r\n  //if necessary, shake the screen\r\n  var shakenCameraX = cameraX;\r\n  var shakenCameraY = cameraY;\r\n  if (screenshake) {\r\n    shakenCameraX += (Math.random() - 0.5) * SCREENSHAKE_RADIUS;\r\n    shakenCameraY += (Math.random() - 0.5) * SCREENSHAKE_RADIUS;\r\n  }\r\n\r\n  //Draw sky\r\n  c.fillStyle = "LightSkyBlue";\r\n  c.fillRect(0, 0, CANVAS_WIDTH, GROUND_Y - 40);\r\n\r\n  //Draw background\r\n  var backgroundX = -(shakenCameraX % BACKGROUND_WIDTH);\r\n  c.drawImage(backgroundImage, backgroundX, -210);\r\n  c.drawImage(backgroundImage, backgroundX + BACKGROUND_WIDTH, -210);\r\n\r\n  //Draw earth\r\n  c.fillStyle = "ForestGreen";\r\n  c.fillRect(0, GROUND_Y - 40, CANVAS_WIDTH, CANVAS_HEIGHT - GROUND_Y + 40);\r\n\r\n  //DRAW BUSHES\r\n  for (var i = 0; i < bushData.length; i++) {\r\n    c.drawImage(\r\n      bushData[i].image,\r\n      bushData[i].x - shakenCameraX,\r\n      GROUND_Y - bushData[i].y - shakenCameraY\r\n    );\r\n  }\r\n\r\n  //Draw robots\r\n  for (var i = 0; i < robotData.length; i++) {\r\n    drawAnimatedSprite(\r\n      robotData[i].x - shakenCameraX,\r\n      robotData[i].y - shakenCameraY,\r\n      robotData[i].frameNr,\r\n      robotSpriteSheet\r\n    );\r\n  }\r\n\r\n  //Draw nanonaut\r\n  drawAnimatedSprite(\r\n    nanonautX - shakenCameraX,\r\n    nanonautY - shakenCameraY,\r\n    nanonautFrameNr,\r\n    nanonautSpriteSheet\r\n  );\r\n\r\n  //display the distance traveled by the nanonaut\r\n  var nanonautDistance = nanonautX / 100;\r\n  c.fillStyle = "black";\r\n  c.font = "48px sans-serif";\r\n  c.fillText(nanonautDistance.toFixed(0) + "m", 20, 40);\r\n\r\n  //Draw nanonaut health\r\n  c.fillStyle = "red";\r\n  c.fillRect(400, 10, (nanonautHealth / NANONAUT_MAX_HEALTH) * 380, 20);\r\n  c.strokeStyle = "red";\r\n  c.strokeRect(400, 10, 380, 20);\r\n\r\n  //If the game is over, display the end of the game\r\n  if (gameMode == GAME_OVER_GAME_MODE) {\r\n    c.font = "69px sans-serif";\r\n    c.fillStyle = "black";\r\n    c.fillText("GAME OVER", 120, 300);\r\n  }\r\n  //Draw a sprite animation\r\n  function drawAnimatedSprite(screenX, screenY, frameNr, spriteSheet) {\r\n    var spriteSheetRow = Math.floor(frameNr / spriteSheet.nrFramesPerRow);\r\n    var spriteSheetColumn = frameNr % spriteSheet.nrFramesPerRow;\r\n    var spriteSheetX = spriteSheetColumn * spriteSheet.spriteWidth;\r\n    var spriteSheetY = spriteSheetRow * spriteSheet.spriteHeight;\r\n\r\n    c.drawImage(\r\n      spriteSheet.image,\r\n      spriteSheetX,\r\n      spriteSheetY,\r\n      spriteSheet.spriteWidth,\r\n      spriteSheet.spriteHeight,\r\n      screenX,\r\n      screenY,\r\n      spriteSheet.spriteWidth,\r\n      spriteSheet.spriteHeight\r\n    );\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')}]);